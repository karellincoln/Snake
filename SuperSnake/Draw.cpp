#include"Draw.h"


extern UTFT myGLCD;
Draw draw;


void Draw::drawWhichPictrue(pos x, pos y, short int width, short int height,
	short int typ, short int color)
{
	char *temp;
	switch (typ)
	{

	case E_OF_SNAKE:
		temp = e; break;
	case S_OF_SNAKE:
		temp = s; break;
	case N_OF_SNAKE:
		temp = n; break;
	case A_OF_SNAKE:
		temp = a; break;
	case K_OF_SNAKE:
		temp = k; break;

	case SNAKE_SHAPE_ONE:
		temp = snake1; break;
	case SNAKE_SHAPE_TWO:
		temp = snake2; break;


	case FAT_BODY:
	case APPLE:
		temp = apple; break;
	case CROSS_WALL:
		temp = crossWall; break;
	case CONVERT_HEAD:
		temp = convertHead; break;
	case MAGNET:
		temp = magnet; break;
	case EMPTY:
		temp = NULL;
	    fillARect(x, y, x + width - 1, y + height - 1, color);
		break;
	default:
		temp = NULL;
		break;

	}
	if (temp!=NULL)
		drawAPicture(x, y, width, height, temp, color);
	
}

void Draw::drawARect(pos x0, pos y0, pos x1, pos y1, short int color)
{
	myGLCD.setColor(color);
	myGLCD.drawRect(x0, y0, x1, y1);
}

void Draw::fillARect(pos x0, pos y0, pos x1, pos y1, short int color)
{
	myGLCD.setColor(color);
	myGLCD.fillRect(x0, y0, x1, y1);
}

void Draw::drawASquare(pos x, pos y, short int size, short int color)
{
	drawARect(x, y, x + size - 1, y + size - 1, color);
}
void Draw::fillASquare(pos x, pos y, short int size, short int color)
{
	fillARect(x, y, x + size - 1, y + size - 1, color);
}


void Draw::erasureRect(pos x0, pos y0, pos x1, pos y1)
{
	fillARect(x0, y0, x1, y1, VGA_BLACK);
}
void Draw::erasureSquare(pos x, pos y, short int size)
{
	fillASquare(x, y, size, VGA_BLACK);
}


//将整个屏幕清空。
void Draw::cleanScreen()
{
	myGLCD.clrScr();
}


void Draw::drawAPicture(pos x, pos y, short int width, short int height,
	char tp[], short int color)
{
	char temp;
	int x0 = x;
	myGLCD.setColor(color);
	int wid = width / 8;
	//将二进制中为一的表示为该点位亮。
	//将tp[]中的数据依次点亮屏幕。
	for (int i = 0; i < height; i++){

		for (int j = 0; j < width; j++){

			if (j % 8 == 0)temp = tp[i*wid + j / 8];
			if (temp & 0x80){
				myGLCD.drawPixel(x0, y);
			}
			temp <<= 1;
			x0++;
		}
		x0 = x;
		y++;
	}
}




char Draw::apple[] = {
	0x42, 0xE7, 0xFF, 0x7E, 0x7E, 0x3C, 0x3C, 0x18/*heart,0*/
};
char Draw::crossWall[] = {
	0x3C, 0x7E, 0xE7, 0xC3, 0xC3, 0xC3, 0xFF, 0xFF/*"H:\tencent\2218374291\FileRecv\door.BMP",0*/
};
char Draw::convertHead[] = {
	0x3C, 0x6E, 0xE3, 0x78, 0x1F, 0xC7, 0x76, 0x3C/*"H:\tencent\2218374291\FileRecv\reverse.BMP",0*/ };
char Draw::magnet[] = {
	0x3F, 0x7F, 0xFF, 0xE0, 0xE0, 0xFF, 0x7F, 0x3F/*"H:\tencent\2218374291\FileRecv\magnet.BMP",0*/
};



char Draw::snake1[] = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x80,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x1E, 0x3F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x1E, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x60, 0x1E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC6, 0x1F, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x46, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xEF, 0x3E,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x3C, 0xCE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0xCE, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
	0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xC1, 0x80, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xD0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0xFF, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x40, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0xF9, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0xA8, 0x00, 0x00, 0xF7, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0xE8, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x80, 0x00, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x01,
	0xE0, 0x00, 0xF4, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1C, 0x00, 0x30, 0x01, 0x4E, 0x08, 0x00, 0x00,
	0x00, 0x00, 0x30, 0x00, 0x78, 0x1B, 0xC7, 0x87, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0xF8, 0x7F,
	0xF7, 0xC4, 0xC0, 0x00, 0x00, 0x00, 0x20, 0x00, 0xD8, 0x9F, 0xCF, 0xC3, 0x70, 0x00, 0x00, 0x00,
	0xC0, 0x01, 0x91, 0x8F, 0xEF, 0xE3, 0xFC, 0x00, 0x00, 0x00, 0x80, 0x03, 0xE7, 0xC7, 0xEF, 0xFF,
	0xFC, 0x00, 0x00, 0x00, 0x00, 0x03, 0xCF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x0F,
	0x87, 0xF9, 0xC8, 0x1F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x0D, 0x0F, 0xF9, 0x8C, 0x03, 0xFF, 0x80,
	0x00, 0x00, 0x00, 0x3E, 0x7F, 0xF9, 0x9B, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x01, 0x8E, 0x5F, 0xF0,
	0x7F, 0x80, 0xFE, 0x00, 0x00, 0x00, 0x01, 0x9C, 0x5F, 0xF0, 0x3E, 0x40, 0x7E, 0x30, 0x00, 0x00,
	0x01, 0xFE, 0xFF, 0xC0, 0x1F, 0x60, 0x3E, 0x78, 0x00, 0x00, 0x01, 0x9C, 0xFF, 0xC0, 0x1F, 0xF0,
	0x3E, 0x7E, 0x00, 0x00, 0x03, 0xBD, 0x8F, 0xC0, 0x07, 0x98, 0x3C, 0xFF, 0x00, 0x00, 0x03, 0xB9,
	0x87, 0x80, 0x07, 0x98, 0x1D, 0xFF, 0xC0, 0x00, 0x07, 0x99, 0xE3, 0x00, 0x0E, 0x08, 0x0F, 0xFF,
	0xE0, 0x00, 0x07, 0x99, 0xED, 0x00, 0x1E, 0x10, 0x07, 0xFF, 0xF0, 0x00, 0x07, 0xB9, 0xFE, 0x00,
	0x3C, 0x18, 0x03, 0xFF, 0xF8, 0x00, 0x07, 0x1D, 0xEE, 0x00, 0xC2, 0x78, 0x01, 0xFF, 0xE4, 0x00,
	0x07, 0x9D, 0xF7, 0x03, 0x02, 0xB8, 0x00, 0xFF, 0xE0, 0x00, 0x07, 0xBD, 0xF7, 0xDC, 0x73, 0xF0,
	0x00, 0x1F, 0xCD, 0x00, 0x07, 0xE5, 0xFF, 0x91, 0xF9, 0xE0, 0x00, 0x07, 0xE3, 0x00, 0x01, 0x3B,
	0xFC, 0x7F, 0xF9, 0x80, 0x00, 0x03, 0xE3, 0x80, 0x06, 0x01, 0xFC, 0xFF, 0xFF, 0x00, 0x00, 0x01,
	0xE7, 0xC0, 0x02, 0x21, 0xF9, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xC3, 0xC0, 0x03, 0xF2, 0x79, 0xFF,
	0xFC, 0x00, 0x00, 0x01, 0x0F, 0xE0, 0x01, 0xFF, 0x19, 0xFF, 0xF0, 0x00, 0x00, 0x02, 0x3F, 0xC0,
	0x00, 0xFF, 0xCF, 0xFE, 0x00, 0x00, 0x00, 0x18, 0xFF, 0xC0, 0x00, 0xFF, 0xD1, 0x00, 0x00, 0x00,
	0x00, 0x23, 0xFF, 0x80, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x80, 0x00, 0x7F,
	0xFE, 0x06, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x7F, 0xFE, 0x0F, 0x78, 0x00, 0x02, 0x3F,
	0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x1E, 0xB6, 0x00, 0xD5, 0x3F, 0xFC, 0x00, 0x00, 0x1F, 0xFE, 0x3F,
	0x69, 0xC0, 0x8A, 0x0F, 0xF8, 0x00, 0x00, 0x07, 0xFE, 0x3F, 0xF7, 0x81, 0x5F, 0x8F, 0xF0, 0x00,
	0x00, 0x01, 0xFE, 0x3F, 0xFF, 0x03, 0xFF, 0x87, 0xC0, 0x00, 0x00, 0x00, 0xFC, 0x1F, 0xFF, 0x01,
	0xFF, 0x8F, 0x80, 0x00, 0x00, 0x00, 0x3C, 0x3F, 0xFF, 0x87, 0xFF, 0xCF, 0x00, 0x00, 0x00, 0x00,
	0x07, 0xFF, 0xFF, 0x07, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xBF, 0xFF, 0xE0,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};  /*"H:\tencent\2218374291\FileRecv\snakea.BMP",0*/

char Draw::snake2[] = {
	0x00, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x07, 0xF1, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xC0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x19, 0x80, 0x7C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1B, 0x38, 0x3E, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x13, 0x7C, 0x36, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x6E, 0x37, 0x00, 0x00, 0x00, 0x00, 0x00,
	0x3D, 0x06, 0x63, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x8E, 0x63, 0x80, 0x00, 0x00, 0x00, 0x00,
	0xF0, 0xDC, 0xC3, 0x80, 0x00, 0x01, 0xC0, 0x00, 0xE0, 0x60, 0xC1, 0xC0, 0x03, 0x03, 0xE0, 0x00,
	0xE0, 0x3F, 0x83, 0x80, 0x0F, 0xE7, 0x30, 0x00, 0xC0, 0x1F, 0x03, 0x80, 0x3A, 0x7C, 0x5C, 0x00,
	0xC0, 0x00, 0x0F, 0x30, 0x77, 0x1D, 0xEE, 0x00, 0x60, 0xE0, 0x1F, 0xFC, 0x67, 0x0D, 0xFE, 0x00,
	0x30, 0xC0, 0x3F, 0x0E, 0xC7, 0x1C, 0xF7, 0x00, 0x31, 0xC1, 0xFC, 0x63, 0x83, 0x1C, 0x67, 0x00,
	0x1B, 0x87, 0xF8, 0x71, 0xB0, 0x1C, 0x03, 0x00, 0x0F, 0x1F, 0x33, 0x33, 0x78, 0x1C, 0xC3, 0x00,
	0x1F, 0xFC, 0x67, 0x83, 0x30, 0x3D, 0xE3, 0x00, 0x3B, 0xFC, 0x63, 0x86, 0x10, 0x39, 0xE3, 0x00,
	0x30, 0x6C, 0xC1, 0x06, 0x00, 0x70, 0xC3, 0x00, 0xE0, 0xC0, 0x9C, 0x0E, 0x60, 0x70, 0x0F, 0x07,
	0x21, 0xB0, 0x9C, 0x1E, 0xF0, 0xE0, 0x0F, 0x1F, 0x63, 0xF8, 0x80, 0x1C, 0xF1, 0xE4, 0x1F, 0xFF,
	0x06, 0x79, 0xF0, 0x1E, 0x63, 0xEE, 0x1F, 0xF9, 0x06, 0x79, 0xF0, 0x37, 0x0F, 0xF4, 0x3B, 0xE1,
	0x01, 0xB3, 0xE0, 0x63, 0xFF, 0x3C, 0xFC, 0x03, 0x03, 0xFF, 0xFF, 0xC1, 0xFE, 0x1F, 0xDE, 0x07,
	0x01, 0xFE, 0x7F, 0x80, 0xE0, 0x0F, 0x07, 0xFC, 0x00, 0x78, 0x3E, 0x00, 0x00, 0x00, 0x00, 0xF0
};/*"H:\tencent\2218374291\FileRecv\littlesnake.BMP",0*/


char Draw::s[] = { 0x78, 0x0F, 0xFF, 0xFE, 0xFC, 0x1F, 0xFF, 0xFF, 0xFC, 0x1F, 0xFF, 0xFF, 0xFC, 0x1F, 0xFF, 0xFF,
0xFC, 0x1F, 0xFF, 0xFF, 0xFC, 0x0F, 0xFF, 0xFE, 0xFC, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00,
0xFC, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF,
0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x7F,
0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFE
};/*"H:\tencent\2218374291\FileRecv\32X32拢篓S拢漏.BMP",0*/
char Draw::n[] = { 0x7C, 0x00, 0x00, 0x1E, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F,
0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F,
0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x00, 0x00, 0x3F, 0xFE, 0x1F, 0x00, 0x3F,
0xFE, 0x3F, 0x80, 0x3F, 0xFE, 0x3F, 0xC0, 0x3F, 0xFE, 0x3F, 0xE0, 0x3F, 0xFE, 0x3F, 0xF0, 0x3F,
0xFE, 0x1F, 0xF8, 0x3F, 0xFE, 0x0F, 0xFC, 0x3F, 0xFE, 0x07, 0xFE, 0x3F, 0xFE, 0x03, 0xFF, 0x3F,
0xFE, 0x01, 0xFF, 0xBF, 0xFE, 0x00, 0xFF, 0xFF, 0xFE, 0x00, 0x7F, 0xFF, 0xFE, 0x00, 0x3F, 0xFF,
0xFE, 0x00, 0x1F, 0xFF, 0xFE, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x03, 0xFF,
0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x7F, 0x7C, 0x00, 0x00, 0x3E
};/*"H:\tencent\2218374291\FileRecv\32X32拢篓N拢漏.BMP",0*/
char Draw::a[] = { 0x7F, 0xE0, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0xFF, 0xF8, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00,
0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x00, 0x01, 0xFF, 0xC0, 0x00,
0x00, 0xFF, 0xE0, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x1F, 0xFC, 0x00,
0x00, 0x0F, 0xFE, 0x00, 0x78, 0x07, 0xFF, 0x00, 0xFC, 0x03, 0xFF, 0x80, 0xFC, 0x01, 0xFF, 0xC0,
0xFC, 0x00, 0xFF, 0xE0, 0xFC, 0x00, 0x7F, 0xF0, 0xFC, 0x00, 0x3F, 0xF8, 0xFC, 0x00, 0x1F, 0xFC,
0xFC, 0x00, 0x0F, 0xFE, 0xFC, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x01, 0xFF,
0xFC, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x7F, 0xFC, 0x03, 0xFF, 0xFF, 0xFC, 0x07, 0xFF, 0xFF,
0xFC, 0x07, 0xFF, 0xFF, 0xFC, 0x07, 0xFF, 0xFF, 0xFC, 0x07, 0xFF, 0xFF, 0x78, 0x03, 0xFF, 0xFE
};/*"H:\tencent\2218374291\FileRecv\32X32拢篓A拢漏.BMP",0*/
char Draw::k[] = { 0xFE, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x03, 0xFF,
0xFE, 0x00, 0x07, 0xFF, 0xFE, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x1F, 0xC0, 0xFE, 0x00, 0x3F, 0x80,
0xFE, 0x00, 0x7F, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x01, 0xFC, 0x00, 0xFE, 0x03, 0xF8, 0x00,
0xFE, 0x07, 0xF0, 0x00, 0xFE, 0x0F, 0xE0, 0x00, 0xFE, 0x1F, 0xC0, 0x00, 0xFE, 0x3F, 0x80, 0x00,
0xFE, 0x3F, 0xC0, 0x00, 0xFE, 0x1F, 0xC0, 0x00, 0xFE, 0x0F, 0xE0, 0x00, 0xFE, 0x07, 0xF0, 0x00,
0xFE, 0x03, 0xF8, 0x00, 0xFE, 0x01, 0xFC, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0xFE, 0x00, 0x7F, 0x00,
0xFE, 0x00, 0x3F, 0x80, 0xFE, 0x00, 0x1F, 0xC0, 0xFE, 0x00, 0x0F, 0xFF, 0xFE, 0x00, 0x07, 0xFF,
0xFE, 0x00, 0x03, 0xFF, 0xFE, 0x00, 0x01, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x7F
};/*"H:\tencent\2218374291\FileRecv\32X32拢篓K拢漏.BMP",0*/
char Draw::e[] = { 0x3F, 0xFF, 0xFF, 0xFE, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
0xFE, 0x00, 0x00, 0x00, 0xFE, 0x07, 0xFF, 0xF8, 0xFE, 0x0F, 0xFF, 0xFC, 0xFE, 0x0F, 0xFF, 0xFC,
0xFE, 0x0F, 0xFF, 0xFC, 0xFE, 0x0F, 0xFF, 0xFC, 0xFE, 0x0F, 0xFF, 0xFC, 0xFE, 0x07, 0xFF, 0xF8,
0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00,
0xFE, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF,
0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0xFF, 0xFF, 0xFF, 0x3F, 0xFF, 0xFF, 0xFE,
};/*"E.BMP",0*/